apiVersion: v1
kind: ServiceAccount
metadata:
  name: nopermission-sa
  namespace: cubbit
automountServiceAccountToken: false

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nopermission
  namespace: cubbit
rules: []

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: cubbit
subjects:
- kind: ServiceAccount
  name: nopermission-sa
  namespace: cubbit
roleRef:
  kind: Role
  name: nopermission
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cuapp-deployment
  namespace: cubbit
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cu-app
  template:
    metadata:
      labels:
        app: cu-app
    spec:
      serviceAccountName: nopermission-sa
      containers:
      - name: cuapp
        image: gigiozzz/cuapp:0.1.0
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
        ports:
        - containerPort: 3000
        securityContext:
          allowPrivilegeEscalation: false

---

apiVersion: v1
kind: Service
metadata:
  name: cuapp-service
  namespace: cubbit
spec:
  type: ClusterIP
  selector:
    app: cu-app
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: cubbit
data:
  nginx.conf: |
    worker_processes 1;

    events { worker_connections 1024; }

    http {

        sendfile on;

        upstream node-app {
            server cuapp-service.cubbit.svc.cluster.local:3000;
        }

        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;

        server {
            listen 8080;

            location / {
                proxy_pass         http://node-app;
                proxy_redirect     off;
            }

            access_log /dev/stdout;
            error_log /dev/stdout;
        }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: curp-deployment
  namespace: cubbit
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cu-rp
  template:
    metadata:
      labels:
        app: cu-rp
    spec:
      serviceAccountName: nopermission-sa
      containers:
      - name: curp
        image: gigiozzz/curp:0.1.0
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
        ports:
        - containerPort: 8080
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf

---

apiVersion: v1
kind: Service
metadata:
  name: curp-service
  namespace: cubbit
spec:
#  type: LoadBalancer
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30007
  selector:
    app: cu-rp